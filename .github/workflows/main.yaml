name: Build and test

on:
  push:

env:
  BASEIMAGE: ghcr.io/${{ github.repository }}
  cache_image: ghcr.io/${{ github.repository }}/cache:cache
  EARTHLY_USE_INLINE_CACHE: true
  EARTHLY_SAVE_INLINE_CACHE: true
  EARTHLY_VERBOSE: true
  EARTHLY_FULL_TARGET: true
  EARTHLY_OUTPUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: "Set image version"
        id: set-image-tag
        run: |
          export IMAGE_TAG="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "image=${BASEIMAGE}:${IMAGE_TAG}" >> ${GITHUB_OUTPUT}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - uses: earthly/actions-setup@v1
        with:
          version: "latest" # or pin to an specific version, e.g. "v0.6.10"
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and possibly push
        env:
          EARTHLY_PUSH: "${{ github.ref == 'refs/heads/main' }}"
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          earthly --remote-cache=${cache_image} +all --IMAGE_TAG="${IMAGE_TAG}" --BASEIMAGE="${BASEIMAGE}" --SKIP_TESTS_FOR_CI=true
      - name: Save manifests for later deploy
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: manifests
          path: deploy.yaml
    outputs:
      image: "${{ steps.set-image-tag.outputs.image }}"

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
    needs:
      - build
    steps:
      - name: Get kubeconfig
        uses: mortenlj/kube-actions/get-kubeconfig@main
      - name: Download manifests from build
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          name: manifests
      - id: join-zt
        name: Join ZeroTier network
        uses: mortenlj/zerotier-actions/join-zt@main
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}
          ping_target: k3s.home.ibidem.no
      - name: Run kubectl apply for application deploy
        uses: mortenlj/kube-actions/apply-manifest@main
        with:
          appname: codetanks
          namespace: codetanks
      - name: Leave ZeroTier network
        if: always()
        uses: mortenlj/zerotier-actions/leave-zt@main
        with:
          node_id: ${{ steps.join-zt.outputs.node_id }}
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}

  cleanup:
    name: Cleanup
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
    steps:
      - name: Cleanup main images
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          packages: codetanks/rusty-hunter,codetanks/groovy-randomizer,codetanks/viewer,codetanks/server
          keep-n-tagged: 5
          older-than: 2 weeks
          delete-untagged: true
          delete-ghost-images: true
          delete-orphaned-images: true
          delete-partial-images: true
      - name: Cleanup old cache images
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package: codetanks/cache
          exclude-tags: cache
          keep-n-tagged: 1
          delete-untagged: true
          delete-ghost-images: true
          delete-orphaned-images: true
          delete-partial-images: false
